"""Initial rev

Revision ID: 669bd26cc2eb
Revises: 
Create Date: 2025-10-22 20:51:30.715652

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '669bd26cc2eb'
down_revision: Union[str, Sequence[str], None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('media',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('media_type', sa.Enum('MOVIE', 'SERIES', 'ANIME', 'BOOK', 'GAME', name='mediatypeenum'), nullable=False),
    sa.Column('title', sa.String(length=255), nullable=False),
    sa.Column('description', sa.String(), nullable=True),
    sa.Column('release_date', sa.Date(), nullable=True),
    sa.Column('image', sa.String(length=500), nullable=True),
    sa.Column('is_custom', sa.Boolean(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_media_id'), 'media', ['id'], unique=False)
    op.create_index(op.f('ix_media_media_type'), 'media', ['media_type'], unique=False)
    op.create_index(op.f('ix_media_title'), 'media', ['title'], unique=False)
    op.create_table('tags',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=50), nullable=False),
    sa.Column('slug', sa.String(length=50), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_tags_id'), 'tags', ['id'], unique=False)
    op.create_index(op.f('ix_tags_name'), 'tags', ['name'], unique=False)
    op.create_index(op.f('ix_tags_slug'), 'tags', ['slug'], unique=True)
    op.create_table('users',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('username', sa.String(length=50), nullable=False),
    sa.Column('email', sa.String(length=100), nullable=False),
    sa.Column('hashed_password', sa.String(length=255), nullable=False),
    sa.Column('is_active', sa.Boolean(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_users_email'), 'users', ['email'], unique=True)
    op.create_index(op.f('ix_users_username'), 'users', ['username'], unique=True)
    op.create_table('anime',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('total_episodes', sa.Integer(), nullable=True),
    sa.Column('studio', sa.String(length=255), nullable=True),
    sa.Column('status', sa.Enum('AIRING', 'FINISHED', 'UPCOMING', name='animeseriesstatusenum'), nullable=True),
    sa.ForeignKeyConstraint(['id'], ['media.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('books',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('pages', sa.Integer(), nullable=True),
    sa.Column('author', sa.String(length=255), nullable=True),
    sa.Column('isbn', sa.String(length=20), nullable=True),
    sa.ForeignKeyConstraint(['id'], ['media.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('games',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('platform', sa.Enum('PC', 'PLAYSTATION', 'XBOX', 'NINTENDO', 'MOBILE', 'WEB', 'OTHER', name='platformenum'), nullable=False),
    sa.Column('developer', sa.String(length=255), nullable=True),
    sa.Column('publisher', sa.String(length=255), nullable=True),
    sa.Column('steam_id', sa.String(length=255), nullable=True),
    sa.ForeignKeyConstraint(['id'], ['media.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('media_tags',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('media_id', sa.Integer(), nullable=False),
    sa.Column('media_type', sa.Enum('MOVIE', 'SERIES', 'ANIME', 'BOOK', 'GAME', name='mediatypeenum'), nullable=False),
    sa.Column('tag_id', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['media_id'], ['media.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['tag_id'], ['tags.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('media_id', 'tag_id', name='unique_media_tag')
    )
    op.create_index(op.f('ix_media_tags_id'), 'media_tags', ['id'], unique=False)
    op.create_index(op.f('ix_media_tags_media_id'), 'media_tags', ['media_id'], unique=False)
    op.create_index(op.f('ix_media_tags_media_type'), 'media_tags', ['media_type'], unique=False)
    op.create_index(op.f('ix_media_tags_tag_id'), 'media_tags', ['tag_id'], unique=False)
    op.create_table('movies',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('runtime', sa.Integer(), nullable=True),
    sa.Column('director', sa.String(length=255), nullable=True),
    sa.ForeignKeyConstraint(['id'], ['media.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('series',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('total_episodes', sa.Integer(), nullable=True),
    sa.Column('seasons', sa.Integer(), nullable=True),
    sa.Column('status', sa.Enum('AIRING', 'FINISHED', 'UPCOMING', name='animeseriesstatusenum'), nullable=True),
    sa.ForeignKeyConstraint(['id'], ['media.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('user_media',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.UUID(), nullable=False),
    sa.Column('media_id', sa.Integer(), nullable=False),
    sa.Column('status', sa.Enum('PLANNING', 'ON_HOLD', 'DROPPED', 'COMPLETED', 'IN_PROGRESS', name='statusenum'), nullable=False),
    sa.Column('priority', sa.Enum('NONE', 'LOW', 'MEDIUM', 'HIGH', name='priorityenum'), nullable=False),
    sa.Column('rating', sa.Integer(), nullable=True),
    sa.Column('progress', sa.Integer(), nullable=True),
    sa.Column('note', sa.String(), nullable=True),
    sa.Column('complete_date', sa.DateTime(), nullable=True),
    sa.Column('is_favorite', sa.Boolean(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.CheckConstraint('rating >= 1 AND rating <= 10', name='rating_range'),
    sa.ForeignKeyConstraint(['media_id'], ['media.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_user_media_id'), 'user_media', ['id'], unique=False)
    op.create_index(op.f('ix_user_media_media_id'), 'user_media', ['media_id'], unique=False)
    op.create_index(op.f('ix_user_media_user_id'), 'user_media', ['user_id'], unique=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_user_media_user_id'), table_name='user_media')
    op.drop_index(op.f('ix_user_media_media_id'), table_name='user_media')
    op.drop_index(op.f('ix_user_media_id'), table_name='user_media')
    op.drop_table('user_media')
    op.drop_table('series')
    op.drop_table('movies')
    op.drop_index(op.f('ix_media_tags_tag_id'), table_name='media_tags')
    op.drop_index(op.f('ix_media_tags_media_type'), table_name='media_tags')
    op.drop_index(op.f('ix_media_tags_media_id'), table_name='media_tags')
    op.drop_index(op.f('ix_media_tags_id'), table_name='media_tags')
    op.drop_table('media_tags')
    op.drop_table('games')
    op.drop_table('books')
    op.drop_table('anime')
    op.drop_index(op.f('ix_users_username'), table_name='users')
    op.drop_index(op.f('ix_users_email'), table_name='users')
    op.drop_table('users')
    op.drop_index(op.f('ix_tags_slug'), table_name='tags')
    op.drop_index(op.f('ix_tags_name'), table_name='tags')
    op.drop_index(op.f('ix_tags_id'), table_name='tags')
    op.drop_table('tags')
    op.drop_index(op.f('ix_media_title'), table_name='media')
    op.drop_index(op.f('ix_media_media_type'), table_name='media')
    op.drop_index(op.f('ix_media_id'), table_name='media')
    op.drop_table('media')
    # ### end Alembic commands ###
